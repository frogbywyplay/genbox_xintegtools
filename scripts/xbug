#!/usr/bin/python2.5
#
# Copyright (C) 2006-2013 Wyplay, All Rights Reserved.
#

import sys, os

from optparse import OptionParser, Option

from xutils import die, verbose, color

from xintegtools.xbug import XBugCmdline, XBugTXTOutput 

options_output=[
                Option('-v',  '--verbose',
                       action='store_true',
                       dest='verbose',
                       help='Turn on verbose mode'),
                Option('-n', '--nocolor',
                       action='store_true',
                       dest='nocolor',
                       help='B&W output (avaiable in TXT mode only)')
               ]

options_parse=[
                Option('-i', '--input',
                       action='store',
                       dest='ifile',
                       help='Set log input file (default: stdin)'),
                Option('-f', '--full',
                       action='store_true',
                       dest='full',
                       help='Show full bug report'),

              ] + options_output

options_actions=[
                ('-p', '--parse', 'Parse input for bugtraq: comments.', options_parse),
                ]

def action_parser_callback(option, opt_str, value, parser, *args, **kwargs):
        sub_parser = OptionParser(usage = "%prog " + "%s [options]" % opt_str)

        setattr(parser.values, "action", option.get_opt_string()[2:])
        if kwargs.get('opts'):
                for opt in kwargs['opts']:
                        sub_parser.add_option(opt)
        (parser.values, rargs) = sub_parser.parse_args(args=parser.rargs, values=parser.values)
        del parser.rargs[:]
        parser.rargs.extend(rargs)

if __name__ == "__main__":
        parser = OptionParser(usage = "%prog [options]")
        parser.set_default('action', None)

        for (short, long, help, sub_opts) in options_actions:
                parser.add_option(short, long,
                                  help=help,
                                  action='callback',
                                  callback=action_parser_callback,
                                  callback_kwargs={'opts' : sub_opts})
        (values, args) = parser.parse_args()

        if not values.action:
                parser.error('An action is required')

        if values.ensure_value('verbose', False):
                verbose(True)

        output_file = values.ensure_value('ofile', None)
        if output_file:
                output_file = open(output_file, 'w')
        else:
                output_file = sys.stdout

        if values.ensure_value('nocolor', False):
                color.nocolor()

        input_file = values.ensure_value('ifile', None)
        if input_file:
                input_file = open(input_file, 'r')
        else:
                input_file = sys.stdin

        if values.action == "parse":
                output = XBugTXTOutput()
                full = values.ensure_value('full', False)

                bug = XBugCmdline()

                bug.parse(input_file)
                
                bug.query_db()

                output.process(bug, output_file, full)
        else:
                parser.error("unknown action")

